import { cookies } from "next/headers";
import { NextRequest, NextResponse } from "next/server";

const protectedRoutes = [
  "/cart",
  "/checkout",
  "/profile",
  "/orders",
  "/favorites",
];
const guestOnlyRoutes = ["/login", "/register"];

export async function middleware(req: NextRequest) {
  const cookieStore = await cookies();
  const jwt = cookieStore.get("jwt")?.value;
  const { pathname } = req.nextUrl;

  const isProtected = protectedRoutes.some((route) =>
    pathname.startsWith(route)
  );
  const isGuestOnly = guestOnlyRoutes.includes(pathname);

  if (isProtected && !jwt) {
    return NextResponse.redirect(new URL("/login", req.url));
  }

  if (isGuestOnly && jwt) {
    return NextResponse.redirect(new URL("/", req.url));
  }

  // ‚úÖ –ò–Ω–∞—á–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
  return NextResponse.next();
}

// üß† –£–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å middleware
export const config = {
  matcher: ["/cart", "/checkout", "/login", "/register", "/favorites"],
};
